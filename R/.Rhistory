j<-1
while(j<7) {
if(i+j==10) {
print(c(i, j))
}
j<-j+1
}
}
i<-1
j<-1
while(i<7) {
j<-1
while(j<7) {
if(i+j==10) {
print(c(i, j))
}
j<-j+1
}
i<-i+1
}
print('Hello R')
func_1()
func_1 <- function() {
print('Hello R')
}
func_1()
func_a('a')
func_2 <- function(x, y) {
return (x+y)
}
func_2(3, 4)
func_3 <- function(x, y) {
return (x^y)
}
func_3(5,3)
func_3(y=10, x=2)
func_4 <- function(x, y=3,z=2) {
return ( (x+y)^z )
}
func_4(1)
func_4(1, 2)
func_5 <- function(...) {
print(c(...))
}
func_5(1, 2,3,4, 5)
func_5(1,2,3)
func_sum <- function(...) {
result <- 0
for(i in c(...)) {
result <- result+i
}
return (result)
}
func_sum(1,2,3,4,5)
func_sum(1:5)
func_sum(1:10)
func_sum(c(1:10)
func_sum(c(1:10))
func_sum2 <- function(x) {
result = 0
for(i in x) {
result <- result + i
}
return result
return (result)
func_sum2 <- function(x) {
result = 0
for(i in x) {
result <- result + i
}
return (result)
}
func_sum_2(c(1, 2, 3, 4, 5))
func_sum_2(1,2,3)
func_sum_2 <- function(x) {
result = 0
for(i in x) {
result <- result + i
}
return (result)
}
func_sum_2(1,2,3)
rm(func_sum2)
func_sum2
func_sum_3 <- function(start, end) {
result = 0
for(i in start: end) {
result = result+i
}
return (result)
}
func_sum_3(1,10)
func_sum_3(10,1)
func_sum_4 <- function(start, end) {
reuslt =0
if(start<end) {
while(start<=end) {
result=start+result
start=start+1
}
} else {
while(end<=start) {
result = result+end
end=end+1
}
}
return (result)
}
func_sum_4(1, 10)
func_sum_4 <- function(start, end) {
result=0
if(start<end) {
while(start<=end) {
result=start+result
start=start+1
}
} else {
while(end<=start) {
result = result+end
end=end+1
}
}
return (result)
}
func_sum_4(1, 10)
func_sum_4(10, 1)
func_sum_5 <- function(start, end) {
result<-0
if(start<end) {
s<-start
e<-end
}else {
s<-end
e<-start
}
while(s<=3) {
result=result+s
s<-s+1
}
return (result)
}
func_sum_5(1,10)
func_sum_5(10,1)
func_sum_5 <- function(start, end) {
result<-0
if(start<end) {
s<-start
e<-end
}else {
s<-end
e<-start
}
while(s<=e) {
result=result+s
s<-s+1
}
return (result)
}
func_sum_5(1,10)
func_sum_5(10,1)
func_mean <- function(...) {
sum_data<-0
cnt=0
for(i in c(...)) {
sum_data=sum_data+i
cnt=cnt+1
}
return (sum_data/cnt)
}
func_mean(2,4,6,8,10)
return ((x+y)^y)
"%s%" = function(x, y) {
return ((x+y)^y)
}
5 %s% 2
return ((x+y)^y)
func_6 = function(x,y) {
return ((x+y)^y)
}
func_6(5,2)
names <- c('test', 'test2', 'test3')
gread <- c(1,2,2)
rm(gread)
grade <- c(1,2,2)
student<- data.frame(names, grade)
student
typeof(student)
midterm <- c(70,80,90)
final <- c(100,90,95)
score<-cbind(midterm, final)
score
typeof(score)
gender<-c('F', 'F', 'M')
data.frame(student, score, gender) -> students
students
students$midterm
students[['names']]
students[[2]]
students[1]
typeof(students[1])
typeof(students[[2]])
students[1,]
students[1,3]
students[c(2,3), c('midterm', 'final')]
students[c(1), c(3)]
students$midterm >= 80 -> flag
flag
students[flag, c('names', 'grade', 'gender')]
new_student <- data.frame(
names='test4',
gender='M',
final=70,
midterm = 60,
grade=3
)
new_student
rbind(students, new_students)
rbind(students, new_students)-> students
rbind(students, new_student)
students
rbind(students, new_student) ->students
students
students$midterm + students$final -> total
cbind(students, total) -> students
students
students$total/2 -> students$mean
students$mean
students
df.read.csv(../csv.csv_exam.csv)
df <- read.csv(../csv.csv_exam.csv)
df <- read.csv("../csv.csv_exam.csv")
df <- read.csv("../csv/csv_exam.csv")
df
df2 <- read.csv('C:\\union\\csv\\csv_exam.csv')
df2 <- read.csv('C:\\ubion\\csv\\csv_exam.csv')
df2
head(df)
head(df, 3)
tail(df)
tail(df, 3)
dim(df)
str(df)
summary(df)
View(df)
df$mean <- (df$math+df$english+df$science) / 3
df$mean
df
ifelse(
df$mean>=70,
'pass',
'fail'
) -> df$check
head(df$check)
head(df, 5)
df %>% math+english+science
df %>%
mutate(sum = math+english+science)
install.packages('dplyr')
library(dplyr)
df %>%
mutate(sum = math+english+science)
df
df %>%
mutate(sum = math+english+science) -> sum
df
df %>%
mutate(sum = math+english+science) -> sum
df
sum
rm(sum)
df %>%
mutate(sum = math+english+science) -> df
df
install.packages('dpylr')
library(dplyr)
install.packages('foreign')
library('foreign')
read.spss('../csv/Koweps/sav', to.data.frame = T) -> welfare
read.spss("../csv/Koweps/sav", to.data.frame = T) -> welfare
read.spss("../csv/Koweps/sav", to.data.frame = T) -> welfare
read.spss("../csv/Koweps.sav", to.data.frame = T) -> welfare
View(welfare)
welfare %>% rename(
gender = h10_g3,
birth = h10_g4,
code_job = h10_eco9,
income = p1002_8aq1,
loc = h10_reg7
) %>% select(gender, birth, code_job, income, loc) -> df
str(df)
df
summary(df)
table(
is.na(df)
)
table(is.na(df$gender))
table(is.na(df$birth))
table(is.na(df$code_job))
table(is.na(df$income))
table(is.na(df$loc))
ifelse(df$gender == 1, 'male','female') -> df$gender
df
table(df$gender)
df %>%
select(gender, income) %>%
filter(!is.na(income) & income != 0 & income != 9999)
df %>%
select(gender, income) %>%
filter(!is.na(income) & income != 0 & income != 9999) %>%
group_by(gender)
df %>%
select(gender, income) %>%
filter(!is.na(income) & income != 0 & income != 9999) %>%
group_by(gender) %>%
summarise(mean_income = mean(income))
df %>%
select(gender, income) %>%
filter(!is.na(income) & income != 0 & income != 9999) %>%
group_by(gender) %>%
summarise(mean_income = mean(income)) -> gender_income
df
ggplot(
gender_income,
aes(
x=gender,
y=mean_income
)
) + geom_col()
install.packages("ggplot2")
library(ggplot2)
ggplot(
gender_income,
aes(
x=gender,
y=mean_income
)
) + geom_col()
df %>%
df %>%
mutate(age=2015-birth+1)
df
df %>%
mutate(age=2015-birth+1)
df %>%
mutate(age=2015-birth+1) %>%
select(age, income)
df %>%
mutate(age=2015-birth+1) %>%
select(age, income) %>%
filter(!is.na(income)&!income %in% c(0,9999))
df %>%
mutate(age=2015-birth+1) %>%
select(age, income) %>%
filter(!is.na(income)&!income %in% c(0,9999)) %>%
group_by(age)
df %>%
mutate(age=2015-birth+1) %>%
select(age, income) %>%
filter(!is.na(income)&!income %in% c(0,9999)) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
df %>%
mutate(age=2015-birth+1) %>%
select(age, income) %>%
filter(!is.na(income)&!income %in% c(0,9999)) %>%
group_by(age) %>%
summarise(mean_income = mean(income)) -> age_income
df
ggplot(
age_income,
aes(
x=age,
y=mean_income
)
) + geom_col()
ggplot(
age_income,
aes(
x=age,
y=mean_income
)
) +geom_line()
source("~/.active-rstudio-document", echo = TRUE)
age_income %>%
arrange(-mean_income) %>%
head(5)
df %>%
df %>%
mutate(age=2015-birth+1) %>%
mutate(ageg = ifelse(
20<=age & 40>age,
'young',
ifelse(
age<60,
'middle',
'old'
)
)
)
df %>%
mutate(age=2015-birth+1) %>%
mutate(ageg = ifelse(
20<=age & 40>age,
'young',
ifelse(
age<60,
'middle',
'old'
)
)
)
df %>%
mutate(age=2015-birth+1) %>%
mutate(ageg = ifelse(
20<=age & 40>age,
'young',
ifelse(
age<60,
'middle',
'old'
)
)
) %>%
filter(!is.na(income) & !income %in% c(0,9999)) %>%
group_by(ageg) %>%
summarise(mean_income=mean(income)) -> age_income
df %>%
mutate(age=2015-birth+1) %>%
mutate(ageg = ifelse(
20<=age & 40>age,
'young',
ifelse(
age<60,
'middle',
'old'
)
)
) %>%
filter(!is.na(income) & !income %in% c(0,9999)) %>%
group_by(ageg) %>%
summarise(mean_income=mean(income)) -> ageg_income
ageg_income
ggplot(ageg_income,
aes(
x=ageg,
y=mean_income
)
+geom_col()+scale_x_discrete(
limits=c('young', 'middle','old')
))
+geom_col()+scale_x_discrete(
limits=c('young', 'middle','old')
)
ggplot(ageg_income,
aes(
x=ageg,
y=mean_income)
) +geom_col()+scale_x_discrete(
limits=c('young', 'middle','old')
)
df_1 <- data.frame(
id = 1:3,
score = c(70,80,90)
)
df_1
df_2 <- data.frame(
id = 2:5,
weight = c(40,50,60,70)
)
df_2
inner_join(df_1, df_2, by='id')
left_join(df_1, df_2, by='id')
right_join(df_1, df_2, by='id')
full_join(df_1, df_2, by='id')
df_3 = data.frame(
id=c(2,2,5,5,5),
loc=c('a','b','c','d','e')
)
left_join(df_3, df_2, by='id')
install.packages('readxl')
library(readxl)
read_excel('../csv/Koweps_Codebook.xlsx', sheet=2)
read_excel('../csv/Koweps_Codebook.xlsx', sheet=2) -> code_book
code_book
source("~/.active-rstudio-document", echo = TRUE)
df %>%
filter(!is.na(code_job))
df %>%
filter(!is.na(code_job)) %>%
filter(income==0)
inner_join(df, code_book, by='code_job')
inner_join(df, code_book, by='code_job') -> total_df
View(total_df)
total_df %>%
filter(!is.na(income))
total_df %>%
filter(!is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(-mean_income)
total_df %>%
filter(!is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(-mean_income) %>%
head(10)
total_df %>%
filter(gender == 'female' & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(-mean_income) %>%
head(5)
